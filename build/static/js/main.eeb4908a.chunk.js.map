{"version":3,"sources":["searchEndpoint.js","Movie.js","imageEndpoint.js","Results.js","App.js","featureEndpoint.js","reportWebVitals.js","index.js"],"names":["searchEndpoint","Movie","vote","title","poster_path","overview","vote_average","className","src","alt","Results","movie","map","movieResults","id","MovieApp","useState","setMovie","searchItem","setSearchItem","a","fetch","res","json","data","results","useEffect","then","response","onSubmit","Event","preventDefault","requestForMovie","type","placeholder","value","onChange","e","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAEeA,G,MAFQ,8F,OCsCRC,EAnCF,SAAC,GAA6C,IACxCC,EADJC,EAA2C,EAA3CA,MAAMC,EAAqC,EAArCA,YAAYC,EAAyB,EAAzBA,SAASC,EAAgB,EAAhBA,aAgBtC,OACI,mCACA,sBAAKC,UAAU,WAAf,UACI,qBAAKC,ICtBM,mCDsBgBJ,EAAaK,IAAKN,IAC7C,sBAAKI,UAAU,aAAf,UACI,6BAAKJ,IACL,sBAAMI,UAAS,eArBZL,EAqB6BI,EApBrCJ,GAAO,EACC,QAEFA,GAAO,EACL,SAGA,QAaH,SAAkDI,OAGtD,sBAAKC,UAAU,WAAf,UACI,0CACA,4BAAIF,aEELK,EA3BD,SAAC,GAAW,IAAVC,EAAS,EAATA,MAGZ,OACI,mCACA,qBAAKJ,UAAU,YAAf,SAEe,IAAVI,EAAe,gDACZA,EAAMC,KAAI,SAAAC,GAAY,OAClB,cAAC,EAAD,CACAV,MAAOU,EAAaV,MACpBC,YAAaS,EAAaT,YAC1BC,SAAUQ,EAAaR,SACvBC,aAAcO,EAAaP,cAJfO,EAAaC,YC4C9BC,EAnDA,WACb,MAAyBC,mBAAS,IAAlC,mBAAOL,EAAP,KAAcM,EAAd,KACA,EAAoCD,mBAAS,IAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KAFiB,4CAejB,8BAAAC,EAAA,sEACoBC,MAAMrB,EAAiBkB,GAD3C,cACQI,EADR,gBAEqBA,EAAIC,OAFzB,OAEQC,EAFR,OAGEP,EAASO,EAAKC,SAAW,IAH3B,4CAfiB,sBAuBjB,OAlBAC,qBAAU,WACRL,MCboB,uHDcnBM,MAAK,SAACC,GAAD,OAAaA,EAASL,UAC3BI,MAAK,SAACC,GACLX,EAASW,EAASH,cAIpB,IAWA,sBAAKlB,UAAU,MAAf,UACE,wBAAQA,UAAU,SAAlB,SACM,sBAAMA,UAAU,GAAGsB,SAAU,SAAAC,GACzBA,EAAMC,iBA3BH,mCA4BHC,IAFJ,SAOE,uBAAOC,KAAK,SAAS1B,UAAU,SAAS2B,YAAY,aACnDC,MAAOjB,EACPkB,SAAU,SAAAC,GAAC,OAAElB,EAAckB,EAAEC,OAAOH,cAS7C,cAAC,EAAD,CAASxB,MAAOA,QEvCP4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eeb4908a.chunk.js","sourcesContent":["const searchEndpoint = \"https://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\"\r\n\r\nexport default searchEndpoint","import React from 'react'\r\nimport imagesEndpoint from './imageEndpoint'\r\n\r\nconst Movie =({title,poster_path,overview,vote_average})=>{\r\n    const setVote=(vote) =>{\r\n        if(vote >=8){\r\n            return \"green\";\r\n            \r\n        }else if(vote >=6){\r\n            return \"orange\"\r\n        }\r\n        else{\r\n            return \"red\"\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    \r\n    return(\r\n        <>\r\n        <div className=\"movieApp\">\r\n            <img src={imagesEndpoint + poster_path} alt={title} />\r\n            <div className=\"movie-info\">\r\n                <h3>{title}</h3>\r\n                <span className={`tag ${setVote(vote_average)}`}>{vote_average}</span>\r\n\r\n            </div>\r\n            <div className=\"overView\">\r\n                <h3>Overview</h3>\r\n                <p>{overview}</p>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Movie","const imagesEndpoint = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nexport default imagesEndpoint","import React from 'react'\r\nimport Movie from './Movie.js'\r\n\r\n\r\n\r\nconst Results=({movie})=>{\r\n    \r\n\r\n    return(\r\n        <>\r\n        <div className=\"container\">\r\n            \r\n            {movie === 0 ? (<h1>No Movie Found</h1>) : (\r\n                movie.map(movieResults=>(\r\n                    <Movie key={movieResults.id}\r\n                    title={movieResults.title}\r\n                    poster_path={movieResults.poster_path}\r\n                    overview={movieResults.overview}\r\n                    vote_average={movieResults.vote_average}\r\n                    />\r\n                ))\r\n                \r\n            )}\r\n             \r\n        </div>\r\n\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Results","import React,{useState, useEffect} from \"react\"\nimport './App.css';\nimport featureEndpoint from './featureEndpoint';\nimport searchEndpoint from './searchEndpoint';\nimport Results from './Results';\n\n\nconst MovieApp=()=>{\n  const [movie, setMovie]= useState([]);\n  const [searchItem, setSearchItem] = useState(\"\")\n\n\n  useEffect(()=>{\n    fetch(featureEndpoint)\n    .then((response)=> response.json())\n    .then((response)=>{\n      setMovie(response.results)\n      //console.log(response.results)\n    })\n    \n  },[])\n\n  async function requestForMovie(){\n    const res = await fetch(searchEndpoint + searchItem)\n    const data = await res.json()\n    setMovie(data.results || [])\n  }\n  \n  \n\n  return(\n    <div className=\"App\">\n      <header className=\"header\">\n            <form className=\"\" onSubmit={Event=>{\n                Event.preventDefault();\n                requestForMovie()\n              \n               \n              }}\n                >\n              <input type=\"search\" className=\"search\" placeholder=\"Search....\" \n               value={searchItem} \n               onChange={e=>setSearchItem(e.target.value)}/>\n                \n            </form>\n            \n            \n\n        </header>\n\n      \n      <Results movie={movie}/>\n    </div>\n  )\n\n}\n\n\nexport default MovieApp;\n","const featureEndpoint = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\"\r\nexport default featureEndpoint","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}